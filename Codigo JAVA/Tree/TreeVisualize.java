/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tree;

import java.awt.AWTException;
import java.awt.AlphaComposite;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import weka.gui.treevisualizer.PlaceNode2;
import weka.gui.treevisualizer.TreeVisualizer;
import weka.gui.visualize.JComponentWriter;
import weka.gui.visualize.JPEGWriter;

/**
 *
 * @author amarquezgr
 */
public class TreeVisualize extends javax.swing.JFrame {
    /**
     * Creates new form TreeVisualize
     */
    public TreeVisualize() {
        initComponents();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jf = new javax.swing.JInternalFrame();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMOpenTree = new javax.swing.JMenuItem();
        jMExport = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(800, 600));

        jf.setVisible(true);

        javax.swing.GroupLayout jfLayout = new javax.swing.GroupLayout(jf.getContentPane());
        jf.getContentPane().setLayout(jfLayout);
        jfLayout.setHorizontalGroup(
            jfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1456, Short.MAX_VALUE)
        );
        jfLayout.setVerticalGroup(
            jfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 747, Short.MAX_VALUE)
        );

        jMenu2.setText("File");

        jMOpenTree.setText("Open Tree");
        jMOpenTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMOpenTreeActionPerformed(evt);
            }
        });
        jMenu2.add(jMOpenTree);

        jMExport.setText("Export");

        jMenuItem1.setText("PNG");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMExport.add(jMenuItem1);

        jMenu2.add(jMExport);

        jMSalir.setText("Exit");
        jMSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSalirActionPerformed(evt);
            }
        });
        jMenu2.add(jMSalir);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jf)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jf)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMOpenTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMOpenTreeActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fileChooser.getSelectedFile();
                System.out.println(file.getAbsolutePath());
//                System.out.println(file.toString());
                
                byte[] encoded = Files.readAllBytes(Paths.get(file.getAbsolutePath()));
                
                String tree = new String(encoded, StandardCharsets.UTF_8);
//                System.out.println(tree);
                
                TreeVisualizer tv = new TreeVisualizer(null, tree , new PlaceNode2());
//                jPTreeView.setLayout(new BorderLayout());
//                jPTreeView.add(tv, BorderLayout.CENTER);
//                jPTreeView.setVisible(true);
//                JFrame jf = new JFrame("Weka Classifier Tree Visualizer: J48");
                jf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//                jf.setSize(800, 600);
                jf.getContentPane().setLayout(new BorderLayout());
                jf.getContentPane().add(tv, BorderLayout.CENTER);
//                jf.setVisible(true);
                // adjust tree
                tv.fitToScreen();
            } catch (IOException ex) {
                Logger.getLogger(TreeVisualize.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jMOpenTreeActionPerformed

    private void jMSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMSalirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            
            JFileChooser chooser=new JFileChooser(".");
            
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG files","png");

            chooser.addChoosableFileFilter(filter);


            chooser.setFileFilter(filter);
            chooser.setFileSelectionMode(chooser.FILES_AND_DIRECTORIES);
            chooser.setDialogTitle("Save File");
            chooser.setCurrentDirectory(new File(System.getProperties().getProperty("user.home")));
            chooser.setFileFilter(new javax.swing.filechooser.FileFilter()
            {
                 public boolean accept(final File f)
                 {
                     return f.isDirectory()|| f.getAbsolutePath().endsWith(".png");
                 }

                 public String getDescription()
                 {
                     return "PNG files (*.png)";
                 }
           });

            
            if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) 
            {
                File outputfile =  chooser.getSelectedFile();
                BufferedImage bi = getScreenShot(jf.getContentPane());
//                File outputfile = new File("saved.png");
                ImageIO.write(bi, "png", outputfile);
            }
        } catch (AWTException ex) {
            Logger.getLogger(TreeVisualize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TreeVisualize.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TreeVisualize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TreeVisualize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TreeVisualize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TreeVisualize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TreeVisualize().setVisible(true);
            }
        });
    }
    
    public static BufferedImage getScreenShot(Component component) throws AWTException {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        Robot robot = new Robot(gd);
        Rectangle bounds = new Rectangle(component.getLocationOnScreen(), component.getSize());
        return robot.createScreenCapture(bounds);
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu jMExport;
    private javax.swing.JMenuItem jMOpenTree;
    private javax.swing.JMenuItem jMSalir;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JInternalFrame jf;
    // End of variables declaration//GEN-END:variables
}
